We have prepared a set of Editor's Choice Solutions. You will see them first after you solve the mission. In order to see all other solutions you should change the filter.
juggler
You are given a positive integer. Your function should calculate the product of the digits excluding any zeroes.

For example: The number given is 123405. The result will be 1*2*3*4*5=120 (don't forget to exclude zeroes).

Input: A positive integer.

Output: The product of the digits as an integer.

Example:

1 checkio(123405) == 120
2 checkio(999) == 729
3 checkio(1000) == 1
4 checkio(1111) == 1

How it is used: This task can teach you how to solve a problem with simple data type conversion.

Precondition: 0 < number < 106

Code:

def checkio(number: int) -> int:
    product = 10
    broj = 1
    auxiliary_list=[0,1,2,3,4,5]
    auxiliary_var=0
    for auxiliary_var in range(len(auxiliary_list)):
        if number % product == 0:
            broj *= 1
            number /= 10
        else:
            broj *= (number % product)
            number -= (number % product)
            number /= 10
    return int(broj)


if __name__ == '__main__':
    print('Example:')
    print(checkio(123405))
    
    # These "asserts" using only for self-checking and not necessary for auto-testing
    assert checkio(123405) == 120
    assert checkio(999) == 729
    assert checkio(1000) == 1
    assert checkio(1111) == 1
    print("Coding complete? Click 'Check' to review your tests and earn cool rewards!")
